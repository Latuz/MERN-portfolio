{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { productListReducer, productDetailsReducer } from './reducers/productReducers';\nimport { cartReducer } from './reducers/cartReducers';\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  cart: cartReducer\n});\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\nconst initialState = {\n  cart: {\n    cartItems: [cartItemsFromStorage]\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;\n/*\r\n\r\n\r\n\r\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { productListReducer, productDetailsReducer } from './reducers/productReducers';\r\nimport { cartReducer } from './reducers/cartReducers';\r\n\r\n\r\n\r\n\r\n\r\nconst reducer = combineReducers({\r\n\tproductList    : productListReducer,\r\n\tproductDetails : productDetailsReducer,\r\n\tcart           : cartReducer\r\n});\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\r\n\r\nconst initialState = {\r\n\tcart : { cartItems: cartItemsFromStorage }\r\n};\r\n\r\nconst middleware = [\r\n\tthunk\r\n];\r\n\r\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\r\n\r\nexport default store;\r\n*/","map":{"version":3,"sources":["D:/Projects/ecomm/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productListReducer","productDetailsReducer","cartReducer","reducer","productList","productDetails","cart","cartItemsFromStorage","localStorage","getItem","JSON","parse","initialState","cartItems","middleware","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,kBAAT,EAA6BC,qBAA7B,QAA0D,4BAA1D;AACA,SAASC,WAAT,QAA4B,yBAA5B;AAEA,MAAMC,OAAO,GAAGP,eAAe,CAAC;AAC/BQ,EAAAA,WAAW,EAAMJ,kBADc;AAE/BK,EAAAA,cAAc,EAAGJ,qBAFc;AAG/BK,EAAAA,IAAI,EAAaJ;AAHc,CAAD,CAA/B;AAMA,MAAMK,oBAAoB,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,IAAoCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CAApC,GAAoF,EAAjH;AAEA,MAAMG,YAAY,GAAG;AACpBN,EAAAA,IAAI,EAAG;AACNO,IAAAA,SAAS,EAAE,CACVN,oBADU;AADL;AADa,CAArB;AAQA,MAAMO,UAAU,GAAG,CAClBhB,KADkB,CAAnB;AAIA,MAAMiB,KAAK,GAAGpB,WAAW,CAACQ,OAAD,EAAUS,YAAV,EAAwBb,mBAAmB,CAACF,eAAe,CAAC,GAAGiB,UAAJ,CAAhB,CAA3C,CAAzB;AAEA,eAAeC,KAAf;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { productListReducer, productDetailsReducer } from './reducers/productReducers';\r\nimport { cartReducer } from './reducers/cartReducers';\r\n\r\nconst reducer = combineReducers({\r\n\tproductList    : productListReducer,\r\n\tproductDetails : productDetailsReducer,\r\n\tcart           : cartReducer\r\n});\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\r\n\r\nconst initialState = {\r\n\tcart : {\r\n\t\tcartItems: [\r\n\t\t\tcartItemsFromStorage\r\n\t\t]\r\n\t}\r\n};\r\n\r\nconst middleware = [\r\n\tthunk\r\n];\r\n\r\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\r\n\r\nexport default store;\r\n\r\n/*\r\n\r\n\r\n\r\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { productListReducer, productDetailsReducer } from './reducers/productReducers';\r\nimport { cartReducer } from './reducers/cartReducers';\r\n\r\n\r\n\r\n\r\n\r\nconst reducer = combineReducers({\r\n\tproductList    : productListReducer,\r\n\tproductDetails : productDetailsReducer,\r\n\tcart           : cartReducer\r\n});\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\r\n\r\nconst initialState = {\r\n\tcart : { cartItems: cartItemsFromStorage }\r\n};\r\n\r\nconst middleware = [\r\n\tthunk\r\n];\r\n\r\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\r\n\r\nexport default store;\r\n*/\r\n"]},"metadata":{},"sourceType":"module"}